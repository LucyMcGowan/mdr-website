---
format: html
---

<center>

::: text

## Uses too many big words

Below is a word cloud of Seth Milchick's most frequently used words of the past \[*few*\] quarter\[*s*\] alone. \[*Lumon*\] recommended that Mr. Milchick begin simplifying his language so as to achieve clearer comprehension from his subordinates and peers.

Lumon claimed (as detailed above) that Milchick is using too many big words. *I don't see evidence of this!*
:::

</center>


```{r}
#| code-fold: true
#| message: false
#| warning: false
#| fig-align: center
library(mdr)
library(tidytext)
library(tidyverse)
library(wordcloud2)
library(textclean)
library(ggiraph)
library(lexicon)

set.seed(266)

transcripts |> 
  filter(grepl("Mil", speaker)) |>
  mutate(
    dialogue = str_replace_all(dialogue, "’", "'"),
    dialogue = replace_contraction(dialogue)
  ) |>
  unnest_tokens(word, dialogue) |>
  anti_join(stop_words) |>
  filter(!word %in% c("ms", "miss")) |>
  mutate(word = gsub("'s", "", word)) |>
  count(word) |>
  filter(n > 2) |>
  arrange(desc(n)) |>
  wordcloud2(backgroundColor = "#030303",
             fontFamily = "Noto Sans Mono",
             size = 0.8)
```

<center>

::: text

## Syllable count

Let's see if Milchick is really using more syllables than everyone else.
:::

</center>

```{r}
#| fig-align: center
#| code-fold: true
#| message: false
#| warning: false
#| fig-width: 10

syllable_df <- transcripts |>
  mutate(
    dialogue = str_replace_all(dialogue, "’", "'"),
    dialogue = replace_contraction(dialogue),
    milchick = grepl("Mil", speaker)
  ) |>
  unnest_tokens(word, dialogue) 

safe_syllable_count <- possibly(
  function(x) qdap::syllable_count(x)$syllables, 
  otherwise = NA_real_
)

syllable_df$syllables <- map_dbl(syllable_df$word, safe_syllable_count)

means_df <- syllable_df |>
  filter(!is.na(syllables), syllables != 0) |>
  group_by(milchick) |>
  summarise(mean_syllables = mean(syllables),
            se_syllables = sd(syllables) / sqrt(n()),
            lcl = mean_syllables - 1.96 * se_syllables,
            ucl = mean_syllables + 1.96 * se_syllables)

p <- syllable_df |>
  filter(!is.na(syllables), syllables != 0) |>
  group_by(milchick, syllables) |>
  summarise(count = n(), .groups = "drop") |>
  group_by(milchick) |>
  mutate(percent = count/sum(count) * 100) |> 
  ggplot(aes(x = syllables, y = percent, fill = milchick,
             tooltip = glue::glue("{round(percent, 1)}% of the words spoken by {ifelse(milchick, 'Milchick','everyone else')} had {syllables} {ifelse(syllables !=1, 'syllables', 'syllable')}")))+
  geom_col_interactive(position = "dodge") +
  scale_fill_manual(values = c("TRUE" = "#E84646", "FALSE" = "#3C8DAD"),
                    name = "",
                    labels = c("Everyone Else", "Milchick")) +
  scale_color_manual(values = c("TRUE" = "red", "FALSE" = "blue")) +
  labs(
    x = "Syllable Count",
    y = "Percentage of Words",
  ) +
  theme_mdr() +
  scale_x_continuous(breaks = seq(0, 6, 1),
                     minor_breaks = seq(0, 6, 0.5)) +
  theme(
    legend.position = "bottom"
  )
#girafe(ggobj = p)
p
```

<center>

::: text
Looking at the distribution above, it looks like no, in general Milchick is in line with the other speakers. Milchick uses an average of `r means_df |> filter(milchick == TRUE) |> pull(mean_syllables) |> round(2)` (95% CI: `r means_df |> filter(milchick == TRUE) |> pull(lcl) |> round(2)` - `r means_df |> filter(milchick == TRUE) |> pull(ucl) |> round(2)`) syllables per word, whereas everyone else is close behind with an average of `r means_df |> filter(milchick == FALSE) |> pull(mean_syllables) |> round(2)` (95% CI: `r means_df |> filter(milchick == FALSE) |> pull(lcl) |> round(2)` - `r means_df |> filter(milchick == FALSE) |> pull(ucl) |> round(2)`). While this difference is technically statistically significant, we do not think it is scientifically meaningful.
:::

::: text

## Common words

Ok, maybe by "big" Lumon meant not that the words were multisyllabic but rather uncommon. We can use Fry's 1000 word list (Fry (1997)) to help us see if Milchick uses uncommon words more frequently than the other characters. This list claims to contain words that make up 90% of all printed text, let's see if Milchick is using more uncommon words than his counterparts. 

:::

</center>

```{r}
#| code-fold: true
#| fig-align: center

words_df <- transcripts |>
  mutate(
    dialogue = str_replace_all(dialogue, "’", "'"),
    dialogue = replace_contraction(dialogue),
    milchick = grepl("Mil", speaker)
  ) |>
  unnest_tokens(word, dialogue) 

fry_words <- tibble(word = tolower(sw_fry_1000)) |>
  mutate(is_common = 1) |>
  distinct()

words_summary <- words_df |>
  left_join(fry_words, by = "word") |>
  mutate(is_common = if_else(is.na(is_common), 0, 1)) |>
  group_by(milchick) |>
  summarize(
    total_words = n(),
    common_words = sum(is_common),
    p_common = common_words / total_words,
    se = sqrt(p_common * (1 - p_common) / n()),
    pct_common = p_common * 100,
    lcl = (p_common - 1.96 * se) * 100,
    ucl = (p_common + 1.96 * se) * 100
  )

ggplot(words_summary, 
       aes(x = milchick, y = pct_common, fill = milchick)) +
  geom_col() +
  scale_fill_manual(values = c("TRUE" = "#E84646", "FALSE" = "#3C8DAD")) +
  scale_y_continuous("Percentage of Common Words", limits = c(0, 100)) +
  scale_x_discrete("", labels = c("Everyone else", "Milchick")) +
  theme_mdr() + 
  theme(legend.position = "none")
```

<center>

::: text

Well look at that, Milchick is in line with the rest of the characters! `r words_summary |> filter(milchick == TRUE) |> pull(pct_common) |> round(1)`% of Milchick's words are "common" (95% CI: `r words_summary |> filter(milchick == TRUE) |> pull(lcl) |> round(1)` - `r words_summary |> filter(milchick == TRUE) |> pull(ucl) |> round(1)`) compared to `r words_summary |> filter(milchick == FALSE) |> pull(pct_common) |> round(1)`% for everyone else `r words_summary |> filter(milchick == FALSE) |> pull(lcl) |> round(1)` - `r words_summary |> filter(milchick == FALSE) |> pull(ucl) |> round(1)`). Notably, these are both much lower than 90%, as (according to Fry) would be expected in written text, so maybe everyone is using weird vocabulary, but it is not at all unique to Milchick! We will be taking this up with the board.

*This analysis was made possible by the [mdr](https://lucymcgowan.github.io/mdr) R package, which used data originally compiled by [the Severance wiki](https://severance.wiki/). It uses data through season 2 episode 5.*
:::

::: text

## Addendum

Some folks want to see which words are specific to Milchick -- instead of weighting by frequency like in our top word cloud, we could instead weight by the `tf-idf` (term frequency, inverse document frequency). This basically tells us *which* words are uniquely used by Milchick. I would argue this is *not* what Lumon claimed to do as they were trying to say he was using *too many* big words (which implies frequency), but in any case this is fun!!

:::

</center>

```{r}
#| code-fold: true

tf_idf <- words_df |>
  mutate(word = case_when(
    word == "innie's" ~ "innie",
    .default = word
  )) |>
  filter(!str_detect(word, "\\d"), word != "b's") |>
  anti_join(stop_words, by = "word") |>
  count(milchick, word, sort = TRUE) |>
  bind_tf_idf(word, milchick, n) |>
  filter(milchick) |>
  mutate(n = round(tf_idf * 10000, 1)) |>
  select(word, n) |>
  arrange(desc(n)) 

wordcloud2(tf_idf, 
           backgroundColor = "#030303",
           fontFamily = "Noto Sans Mono",
           size = 0.2)
```


