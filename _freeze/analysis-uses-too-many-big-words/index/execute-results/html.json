{
  "hash": "40e472b1944b57678643854a98efaa74",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\n---\n\n\n\n<center>\n\n::: text\n\n## Uses too many big words\n\nBelow is a word cloud of Seth Milchick's most frequently used words of the past \\[*few*\\] quarter\\[*s*\\] alone. \\[*Lumon*\\] recommended that Mr. Milchick begin simplifying his language so as to achieve clearer comprehension from his subordinates and peers.\n\nLumon claimed (as detailed above) that Milchick is using too many big words. *I don't see evidence of this!*\n:::\n\n</center>\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(mdr)\nlibrary(tidytext)\nlibrary(tidyverse)\nlibrary(wordcloud2)\nlibrary(textclean)\nlibrary(ggiraph)\nlibrary(lexicon)\n\nset.seed(266)\n\ntranscripts |> \n  filter(grepl(\"Mil\", speaker)) |>\n  mutate(\n    dialogue = str_replace_all(dialogue, \"’\", \"'\"),\n    dialogue = replace_contraction(dialogue)\n  ) |>\n  unnest_tokens(word, dialogue) |>\n  anti_join(stop_words) |>\n  filter(!word %in% c(\"ms\", \"miss\")) |>\n  mutate(word = gsub(\"'s\", \"\", word)) |>\n  count(word) |>\n  filter(n > 2) |>\n  arrange(desc(n)) |>\n  wordcloud2(backgroundColor = \"#030303\",\n             fontFamily = \"Noto Sans Mono\",\n             size = 0.8)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"wordcloud2 html-widget html-fill-item\" id=\"htmlwidget-2756f79f2ee279509ac0\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2756f79f2ee279509ac0\">{\"x\":{\"word\":[\"dylan\",\"mark\",\"irving\",\"helly\",\"outie\",\"time\",\"cobel\",\"innie\",\"office\",\"kier\",\"lumon\",\"morning\",\"day\",\"hey\",\"burt\",\"feel\",\"huang\",\"mdr\",\"refiners\",\"scout\",\"party\",\"severed\",\"eagan\",\"hope\",\"afraid\",\"company\",\"experience\",\"floor\",\"happy\",\"milchick\",\"ready\",\"remember\",\"seat\",\"stop\",\"word\",\"ahead\",\"call\",\"called\",\"department\",\"dieter\",\"enjoy\",\"evening\",\"eyes\",\"fire\",\"happened\",\"hate\",\"head\",\"hollow\",\"life\",\"love\",\"meantime\",\"night\",\"rest\",\"return\",\"special\",\"start\",\"stay\",\"team\",\"told\",\"balloons\",\"brother\",\"card\",\"check\",\"choose\",\"doors\",\"employ\",\"escort\",\"excuse\",\"favorite\",\"forward\",\"fourth\",\"gonna\",\"hair\",\"happen\",\"heard\",\"hours\",\"management\",\"marshmallows\",\"mind\",\"minute\",\"minutes\",\"ortbo\",\"paintings\",\"petey\",\"quarter\",\"question\",\"read\",\"refinement\",\"sound\",\"tonight\",\"understand\",\"waterfall\",\"wife\",\"woe\",\"wonderful\",\"wondering\"],\"freq\":[32,32,23,21,15,15,12,12,12,11,10,10,9,9,8,8,8,8,8,8,7,7,6,6,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],\"fontFamily\":\"Noto Sans Mono\",\"fontWeight\":\"bold\",\"color\":\"random-dark\",\"minSize\":0,\"weightFactor\":4.5,\"backgroundColor\":\"#030303\",\"gridSize\":0,\"minRotation\":-0.7853981633974483,\"maxRotation\":0.7853981633974483,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}}</script>\n```\n\n:::\n:::\n\n\n\n<center>\n\n::: text\n\n## Syllable count\n\nLet's see if Milchick is really using more syllables than everyone else.\n:::\n\n</center>\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsyllable_df <- transcripts |>\n  mutate(\n    dialogue = str_replace_all(dialogue, \"’\", \"'\"),\n    dialogue = replace_contraction(dialogue),\n    milchick = grepl(\"Mil\", speaker)\n  ) |>\n  unnest_tokens(word, dialogue) \n\nsafe_syllable_count <- possibly(\n  function(x) qdap::syllable_count(x)$syllables, \n  otherwise = NA_real_\n)\n\nsyllable_df$syllables <- map_dbl(syllable_df$word, safe_syllable_count)\n\nmeans_df <- syllable_df |>\n filter(!is.na(syllables), syllables != 0) |>\n group_by(milchick) |>\n summarise(mean_syllables = mean(syllables),\n           se_syllables = sd(syllables) / sqrt(n()),\n           lcl = mean_syllables - 1.96 * se_syllables,\n           ucl = mean_syllables + 1.96 * se_syllables)\n\np <- syllable_df |>\n  filter(!is.na(syllables), syllables != 0) |>\n  group_by(milchick, syllables) |>\n  summarise(count = n(), .groups = \"drop\") |>\n  group_by(milchick) |>\n  mutate(percent = count/sum(count) * 100) |> \n  ggplot(aes(x = syllables, y = percent, fill = milchick,\n             tooltip = glue::glue(\"{round(percent, 1)}% of the words spoken by {ifelse(milchick, 'Milchick','everyone else')} had {syllables} {ifelse(syllables !=1, 'syllables', 'syllable')}\")))+\n  geom_col_interactive(position = \"dodge\") +\n  scale_fill_manual(values = c(\"TRUE\" = \"#E84646\", \"FALSE\" = \"#3C8DAD\"),\n                    name = \"\",\n                    labels = c(\"Everyone Else\", \"Milchick\")) +\n  scale_color_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"blue\")) +\n  labs(\n    x = \"Syllable Count\",\n    y = \"Percentage of Words\",\n  ) +\n  theme_mdr() +\n  scale_x_continuous(breaks = seq(0, 6, 1),\n                    minor_breaks = seq(0, 6, 0.5)) +\n  theme(\n    legend.position = \"bottom\"\n  )\n#girafe(ggobj = p)\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n<center>\n\n::: text\nLooking at the distribution above, it looks like no, in general Milchick is in line with the other speakers. Milchick uses an average of 1.35 (95% CI: 1.33 - 1.37) syllables per word, whereas everyone else is close behind with an average of 1.28 (95% CI: 1.27 - 1.29). While this difference is technically statistically significant, we do not think it is scientifically meaningful.\n:::\n\n::: text\n\n## Common words\n\nOk, maybe by \"big\" Lumon meant not that the words were multisyllabic but rather uncommon. We can use Fry's 1000 word list (Fry (1997)) to help us see if Milchick uses uncommon words more frequently than the other characters. This list claims to contain words that make up 90% of all printed text, let's see if Milchick is using more uncommon words than his counterparts. \n\n:::\n\n</center>\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nwords_df <- transcripts |>\n  mutate(\n    dialogue = str_replace_all(dialogue, \"’\", \"'\"),\n    dialogue = replace_contraction(dialogue),\n    milchick = grepl(\"Mil\", speaker)\n  ) |>\n  unnest_tokens(word, dialogue) \n\nfry_words <- tibble(word = tolower(sw_fry_1000)) |>\n  mutate(is_common = 1) |>\n  distinct()\n\nwords_summary <- words_df |>\n  left_join(fry_words, by = \"word\") |>\n  mutate(is_common = if_else(is.na(is_common), 0, 1)) |>\n  group_by(milchick) |>\n  summarize(\n    total_words = n(),\n    common_words = sum(is_common),\n    p_common = common_words / total_words,\n    se = sqrt(p_common * (1 - p_common) / n()),\n    pct_common = p_common * 100,\n    lcl = (p_common - 1.96 * se) * 100,\n    ucl = (p_common + 1.96 * se) * 100\n  )\n\nggplot(words_summary, \n       aes(x = milchick, y = pct_common, fill = milchick)) +\n  geom_col() +\n   scale_fill_manual(values = c(\"TRUE\" = \"#E84646\", \"FALSE\" = \"#3C8DAD\")) +\n  scale_y_continuous(\"Percentage of Common Words\", limits = c(0, 100)) +\n  scale_x_discrete(\"\", labels = c(\"Everyone else\", \"Milchick\")) +\n  theme_mdr() + \n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n<center>\n\n::: text\n\nWell look at that, Milchick is in line with the rest of the characters! 71.6% of Milchick's words are \"common\" (95% CI: 70.3 - 72.8) compared to 72.8% for everyone else 72.3 - 73.3). Notably, these are both much lower than 90%, as (according to Fry) would be expected in written text, so maybe everyone is using weird vocabulary, but it is not at all unique to Milchick! We will be taking this up with the board.\n\n*This analysis was made possible by the [mdr](https://lucymcgowan.github.io/mdr) R package, which used data originally compiled by [the Severance wiki](https://severance.wiki/). It uses data through season 2 episode 5.*\n:::\n\n</center>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/wordcloud2-0.0.1/wordcloud.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/wordcloud2-0.0.1/wordcloud2-all.js\"></script>\n<script src=\"../site_libs/wordcloud2-0.0.1/hover.js\"></script>\n<script src=\"../site_libs/wordcloud2-binding-0.2.1/wordcloud2.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}