{
  "hash": "c1699007e04a8d5452591eb4f53943ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\n---\n\n\n\n<center>\n\n::: text\n\n## Uses too many big words\n\nBelow is a word cloud of Seth Milchick's most frequently used words of the past \\[*few*\\] quarter\\[*s*\\] alone. \\[*Lumon*\\] recommended that Mr. Milchick begin simplifying his language so as to achieve clearer comprehension from his subordinates and peers.\n\n*I don't see evidence of this!*\n:::\n\n</center>\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(mdr)\nlibrary(tidytext)\nlibrary(tidyverse)\nlibrary(wordcloud2)\nlibrary(textclean)\nlibrary(ggiraph)\n\nset.seed(266)\n\ntranscripts |> \n  filter(grepl(\"Mil\", speaker)) |>\n  mutate(\n    dialogue = str_replace_all(dialogue, \"’\", \"'\"),\n    dialogue = replace_contraction(dialogue)\n  ) |>\n  unnest_tokens(word, dialogue) |>\n  anti_join(stop_words) |>\n  filter(!word %in% c(\"ms\", \"miss\")) |>\n  mutate(word = gsub(\"'s\", \"\", word)) |>\n  count(word) |>\n  filter(n > 2) |>\n  wordcloud2(backgroundColor = \"#030303\",\n             fontFamily = \"Noto Sans Mono\",\n             size = 0.3)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"wordcloud2 html-widget html-fill-item\" id=\"htmlwidget-2756f79f2ee279509ac0\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2756f79f2ee279509ac0\">{\"x\":{\"word\":[\"afraid\",\"ahead\",\"balloons\",\"brother\",\"burt\",\"call\",\"called\",\"card\",\"check\",\"choose\",\"cobel\",\"company\",\"day\",\"department\",\"dieter\",\"doors\",\"dylan\",\"eagan\",\"enjoy\",\"evening\",\"experience\",\"eyes\",\"favorite\",\"feel\",\"fire\",\"floor\",\"fourth\",\"gonna\",\"happen\",\"happened\",\"happy\",\"hate\",\"head\",\"helly\",\"hey\",\"hollow\",\"hope\",\"hours\",\"huang\",\"innie\",\"irving\",\"kier\",\"life\",\"love\",\"lumon\",\"mark\",\"marshmallows\",\"mdr\",\"meantime\",\"milchick\",\"mind\",\"minute\",\"morning\",\"night\",\"office\",\"outie\",\"party\",\"petey\",\"quarter\",\"read\",\"ready\",\"refinement\",\"refiners\",\"remember\",\"rest\",\"return\",\"scout\",\"seat\",\"severed\",\"special\",\"start\",\"stay\",\"stop\",\"team\",\"time\",\"told\",\"tonight\",\"waterfall\",\"wife\",\"woe\",\"word\"],\"freq\":[5,3,3,3,8,4,3,3,3,3,11,4,9,4,4,3,28,4,4,3,5,3,3,7,4,5,3,3,3,4,5,3,3,20,9,4,5,3,6,11,16,9,4,4,10,30,3,4,3,5,3,3,10,4,11,11,6,3,3,3,3,3,8,4,3,4,8,5,7,4,4,4,5,4,13,4,3,3,3,3,4],\"fontFamily\":\"Noto Sans Mono\",\"fontWeight\":\"bold\",\"color\":\"random-dark\",\"minSize\":0,\"weightFactor\":1.8,\"backgroundColor\":\"#030303\",\"gridSize\":0,\"minRotation\":-0.7853981633974483,\"maxRotation\":0.7853981633974483,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}}</script>\n```\n\n:::\n:::\n\n\n\n<center>\n\n::: text\n## Syllable count\n\nLet's see if Milchick is really using more syllables than everyone else.\n:::\n\n</center>\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsyllable_df <- transcripts |>\n  mutate(\n    dialogue = str_replace_all(dialogue, \"’\", \"'\"),\n    dialogue = replace_contraction(dialogue),\n    milchick = grepl(\"Mil\", speaker)\n  ) |>\n  unnest_tokens(word, dialogue) \n\nsafe_syllable_count <- possibly(\n  function(x) qdap::syllable_count(x)$syllables, \n  otherwise = NA_real_\n)\n\nsyllable_df$syllables <- map_dbl(syllable_df$word, safe_syllable_count)\n\nmeans_df <- syllable_df |>\n filter(!is.na(syllables), syllables != 0) |>\n group_by(milchick) |>\n summarise(mean_syllables = mean(syllables),\n           se_syllables = sd(syllables) / n(),\n           lcl = mean_syllables - 1.96 * se_syllables,\n           ucl = mean_syllables + 1.96 * se_syllables)\n\np <- syllable_df |>\n  filter(!is.na(syllables), syllables != 0) |>\n  group_by(milchick, syllables) |>\n  summarise(count = n(), .groups = \"drop\") |>\n  group_by(milchick) |>\n  mutate(percent = count/sum(count) * 100) |> \n  ggplot(aes(x = syllables, y = percent, fill = milchick,\n             tooltip = glue::glue(\"{round(percent, 1)}% of the words spoken by {ifelse(milchick, 'Milchick','everyone else')} had {syllables} {ifelse(syllables !=1, 'syllables', 'syllable')}\")))+\n  geom_col_interactive(position = \"dodge\") +\n  scale_fill_manual(values = c(\"TRUE\" = \"#E84646\", \"FALSE\" = \"#3C8DAD\"),\n                    name = \"\",\n                    labels = c(\"Everyone Else\", \"Milchick\")) +\n  scale_color_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"blue\")) +\n  labs(\n    x = \"Syllable Count\",\n    y = \"Percentage of Words\",\n  ) +\n  theme_mdr() +\n  scale_x_continuous(breaks = seq(0, 6, 1),\n                    minor_breaks = seq(0, 6, 0.5)) +\n  theme(\n    legend.position = \"bottom\"\n  )\n#girafe(ggobj = p)\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n<center>\n\n::: text\nLooking at the distribution above, it looks like no, in general Milchick is in line with the other speakers. Milchick uses an average of 1.34 (95% CI: 1.33 - 1.34) syllables per word, whereas everyone else is close behind with an average of 1.28 (95% CI: 1.28 - 1.28). While this difference is technically statistically significant, we do not think it is scientifically meaningful. We will be taking this to the board.\n\n*This analysis was made possible by the [mdr](https://lucymcgowan.github.io/mdr) R package, which used data originally compiled by [the Severance wiki](https://severance.wiki/). It uses data through season 2 episode 5.*\n:::\n\n</center>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/wordcloud2-0.0.1/wordcloud.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/wordcloud2-0.0.1/wordcloud2-all.js\"></script>\n<script src=\"../site_libs/wordcloud2-0.0.1/hover.js\"></script>\n<script src=\"../site_libs/wordcloud2-binding-0.2.1/wordcloud2.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}