{
  "hash": "fce4111dbe6c12077a0ee7dc5323831a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\n---\n\n\n\n<style>\npre code {\ncolor: white\n}\n</style>\n\n<center>\n::: text\n\n## Helly vs. Helena, a voice analysis\n\nTo my ear, Helena's voice has always sounded deeper to me compared to Helly's. I first noticied this when <span class=\"spoiler\">I suspected that it was Helena on the severed floor at the beginning of season 2</span>, and have continued to hear it. Now after episode 9, I am again wondering who is actually on the severed floor, so I decided to see if we could collect some data. I started by taking a random sample of vocals we know are Helly's. I took the transcript data from the [mdr](https://lucymcgowan.github.io/mdr) R package and filtered to include just rows where Helly was the speaker and the dialogue was at least 100 characters. I then randomly sampled 10 (although we ended up with 9, one was accidentally a line from season 1 episode 4 where Helena was speaking to Helly via the TV). Here is my Helly sample:\n\n:::\n\n</center>\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(mdr)\nlibrary(tidyverse)\nset.seed(2938)\nhelly_sample <- transcripts |>\n  filter(grepl(\"Helly\", speaker),\n         nchar(dialogue) > 100,\n         (season == 1 & episode != 9 | season == 2 & !episode < 5),\n         !(season == 1 & episode == 1 & minute(timestamp) == 30)) |>\n  sample_n(10) |>\n  arrange(season, episode)\n\nhelena_sample <- transcripts |>\n  filter(grepl(\"Helly\", speaker),\n         nchar(dialogue) > 100,\n         season == 2, episode %in% c(1, 4)) |>\n  arrange(season, episode)\n\nhelly_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   season episode timestamp speaker dialogue                                    \n    <int>   <int> <time>    <chr>   <chr>                                       \n 1      1       2 14'50\"    Helly   I really don’t. I guess I went home last ni…\n 2      1       2 48'10\"    Helly   Okay, but how good are the scanners? Like, …\n 3      1       3 46'56\"    Helly   “Forgive me for the harm I have caused this…\n 4      1       5 39'37\"    Helly   I mean, what if the goats are the numbers? …\n 5      1       7 35'18\"    Helly   Yeah, see. There are two lever switches tha…\n 6      1       7 27'56\"    Helly   We can find whatever they use to control it…\n 7      2       5 25'10\"    Helly   You don't. You just have to trust me. This …\n 8      2       6 14'16\"    Helly   What sucks is that she got to have that, an…\n 9      2       6 06'55\"    Helly   It's so that we won't work together, becaus…\n10      2       6 02'51\"    Helly   Okay. Well, I still have a hall pass, so I …\n```\n\n\n:::\n:::\n\n\n\n<center>\n::: text\nI then sampled the same from the episodes we know are Helena. After filtering to only lines of dialogue that were at least 100 characters, we ended up with 6 such samples.\n:::\n\n</center>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  season episode timestamp speaker dialogue                                     \n   <int>   <int> <time>    <chr>   <chr>                                        \n1      2       1 33'06\"    Helly R \"Then I went outside and found a guy. He loo…\n2      2       1 36'25\"    Helly R \"Right. Of course. I mean, assuming she's st…\n3      2       1 36'54\"    Helly R \"We're not the same, actually. Us and the ou…\n4      2       4 10'36\"    Helly   \"\\\"I was not born into this world alone. The…\n5      2       4 10'55\"    Helly   \"\\\"In infancy, he was my bosom friend. But a…\n6      2       4 25'21\"    Helly   \"You guys... He melted, right? He turned int…\n```\n\n\n:::\n:::\n\n\n\n<center>\n\n::: text\n\nI likewise took a sample from episode 9, when Helly/Helena was talking to Dylan (labeled \"unknown\" below). I then recorded the audio and estimated the fundamental frequency through a short-term cepstral transform. The figure below shows the distribution of average fundamental frequency by who was speaking. Note that our \"unknown\" falls much closer to Helena compared to Helly.\n:::\n\n</center>\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tuneR)\nlibrary(seewave)\nlibrary(glue)\n\nget_avg_pitch <- function(n, who = \"helly\") {\n  audio <- readWave(glue(\"data/o{n}_{who}.wav\"))\n  pitch_values <- fund(audio, f = audio@samp.rate, from = 0, \n                       to = duration(audio), plot = FALSE)\n  tibble(mean = mean(pitch_values[,2], na.rm = TRUE),\n         sd = sd(pitch_values[,2], na.rm = TRUE),\n         median = median(pitch_values[,2], na.rm = TRUE),\n         skewness = moments::skewness(pitch_values[,2], na.rm = TRUE),\n         kurtosis = moments::kurtosis(pitch_values[,2], na.rm = TRUE),\n         class = who)\n}\nhelly_pitch <- purrr::map_df(1:9, get_avg_pitch, who = \"helly\") \nhelena_pitch <- purrr::map_df(1:6, get_avg_pitch, who = \"helena\")\n\naudio <- readWave(glue(\"data/q1.wav\"))\npitch_values <- fund(audio, f = audio@samp.rate, from = 0, \n                     to = duration(audio), plot = FALSE)\nunknown <- tibble(mean = mean(pitch_values[,2], na.rm = TRUE),\n                  sd = sd(pitch_values[,2], na.rm = TRUE),\n                  median = median(pitch_values[,2], na.rm = TRUE),\n                  skewness = moments::skewness(pitch_values[,2], na.rm = TRUE),\n                  kurtosis = moments::kurtosis(pitch_values[,2], na.rm = TRUE),\n                  class = \"unknown\")\ndata <- bind_rows(helly_pitch, helena_pitch, unknown)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data, aes(x = mean, y = class, fill = class, color = class)) +\n  geom_boxplot(alpha = 0.75, linewidth = 1.5) +\n  labs(x = \"Average pitch (fundamental frequency in kHz)\", y = \"\") + \n  annotate(\"text\", x = 12.2, y = 3.2, \n           label = \"\\\"unknown\\\" matches Helena's\\ncentral tendency, not Helly's\", \n           color = \"yellow\", size = 4.5,\n           fontface = \"bold\", hjust = 0) +\n  annotate(\"curve\", x = 12.2, xend = 11.7, \n           y = 3.2, yend = 3, \n           curvature = 0.3,\n           arrow = arrow(length = unit(0.2, \"inches\"), type = \"closed\"), \n           color = \"yellow\", linewidth = 1.2) +\n  annotate(\"curve\", x = 13, xend = 12.3, \n           y = 3, yend = 1.5, \n           curvature = 0.3,\n           arrow = arrow(length = unit(0.2, \"inches\"), type = \"closed\"), \n           color = \"yellow\", linewidth = 1.2) +\n  scale_fill_manual(values = c(\"#C15C58\", \"#5BA9D0\", \"yellow\")) + \n  scale_color_manual(values = c(\"#C15C58\", \"#5BA9D0\", \"yellow\")) +\n  theme_mdr() + \n  theme(legend.position = \"none\",\n        axis.text = element_text(size = 20),\n        axis.title = element_text(size = 20),\n        panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n<center>\n\n::: text\nI extracted pitch features including the mean, standard deviation, median, skewness, and kurtosis of the fundamental frequencies. I fit a k-Nearest Neighbors (k-NN) model using these features. The model was trained on the known audio samples from Helly and Helena. I then classified the unknown sample based on its proximity to the two groups. And look at that, it predicted that the unknown audio was from *Helena* not Helly.\n\n:::\n\n</center>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- data |>\n  filter(class != \"unknown\")\n\ntrain_class <- train_data$class\n\ntrain_data <- train_data |>\n  select(-class)\n\nunknown_data <- data |> \n  filter(class == \"unknown\") |>\n  select(-class)\n\nclass::knn(train = train_data, \n           test = unknown_data, \n           cl = train_class, k = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] helena\nLevels: helena helly\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}