---
format: html
---

<center>

::: text

## Sentiment analysis, innies vs outies

This analysis was made possible by the [mdr](https://lucymcgowan.github.io/mdr) R package, which used data originally compiled by [the Severance wiki](https://severance.wiki/). I looked at the first two episodes of season two, the first, which consists of just time with the innies, and the second with the outies. I was interested in the difference in sentiment, using the AFINN sentiment lexicon. It looks like the innies are far more negative, in terms of language, compared to the outies, with the innies having a negative average sentiment score (`-0.26`) and the outies a positive score (`0.26`). We can look at the distribution.

:::

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(tidytext)
library(mdr)

sentiment_data <- transcripts |>
  filter(season == 2, grepl("Mark|Dylan|Helly|Irving", speaker)) |>
  unnest_tokens(word, dialogue) |>
  inner_join(get_sentiments("afinn"), by = "word") 

sentiment_summary <- sentiment_data |>
  group_by(episode) |>
  summarise(sentiment = mean(value))

sentiment_data %>%
  group_by(episode, value) |>
  count() |>
  ungroup() |>
  group_by(episode) |>
  mutate(total_words = sum(n),  
         percentage = (n / total_words)) |>
  ungroup()|>
ggplot(aes(x = value, y = percentage, fill = factor(episode))) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.7) + 
  scale_y_continuous(labels = scales::percent) +
  theme_mdr() +
  scale_fill_manual(values = c("blue", "red")) +
  labs(y = "",
       x = "sentiment value",
       fill = "Episode")
```

::: text

Now lets look at some word frequency by episode. I pulled out the top 5 words per sentiment (and show some ties). 

:::


```{r}
#| echo: false
word_freq <- sentiment_data |>
  mutate(sentiment = ifelse(value > 0, "positive", "negative")) |>
  count(word, sentiment, episode, sort = TRUE) |>
  ungroup()

word_freq |>
  filter(sentiment %in% c("positive", "negative"), episode == 1) |>
  group_by(sentiment) |>
  top_n(5) |>
  ggplot(aes(x = reorder(word, n), y = n, fill = sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE, alpha = 0.8) +
  scale_fill_manual(values = c("red", "blue")) +
  coord_flip() +
  facet_wrap(~sentiment, scales = "free") +
  labs(title = "Top Words in Each Sentiment (S2E1)", 
       x = "Word", 
       y = "Frequency") +
  theme_mdr() 

word_freq |>
  filter(sentiment %in% c("positive", "negative"), episode == 2) |>
  group_by(sentiment) |>
  top_n(5) |>
  ggplot(aes(x = reorder(word, n), y = n, fill = sentiment)) +
  scale_fill_manual(values = c("red", "blue")) +
  geom_bar(stat = "identity", show.legend = FALSE, alpha = 0.8) +
  coord_flip() +
  facet_wrap(~sentiment, scales = "free") +
  labs(title = "Top Words in Each Sentiment (S2E2)", 
       x = "Word", 
       y = "Frequency") +
  theme_mdr() 


```
</center>
