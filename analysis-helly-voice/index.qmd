---
format: html
---

<style>
pre code {
color: white
}
</style>

<center>
::: text

## Helly vs. Helena, a voice analysis

To my ear, Helena's voice has always sounded deeper to me compared to Helly's. I first noticied this when <span class="spoiler">I suspected that it was Helena on the severed floor at the beginning of season 2</span>, and have continued to hear it. Now after episode 9, I am again wondering who is actually on the severed floor, so I decided to see if we could collect some data. I started by taking a random sample of vocals we know are Helly's. I took the transcript data from the [mdr](https://lucymcgowan.github.io/mdr) R package and filtered to include just rows where Helly was the speaker and the dialogue was at least 100 characters. I then randomly sampled 10 (although we ended up with 9, one was accidentally a line from season 1 episode 4 where Helena was speaking to Helly via the TV). Here is my Helly sample:

:::

</center>

```{r}
#| code-fold: true
#| message: false
#| warning: false
library(mdr)
library(tidyverse)
set.seed(2938)
helly_sample <- transcripts |>
  filter(grepl("Helly", speaker),
         nchar(dialogue) > 100,
         (season == 1 & episode != 9 | season == 2 & !episode < 5),
         !(season == 1 & episode == 1 & minute(timestamp) == 30)) |>
  sample_n(10) |>
  arrange(season, episode)

helena_sample <- transcripts |>
  filter(grepl("Helly", speaker),
         nchar(dialogue) > 100,
         season == 2, episode %in% c(1, 4)) |>
  arrange(season, episode) |>
  slice(1:5)

helly_sample
```

<center>
::: text
I then sampled the same from the episodes we known are Helena. After filtering to only lines of dialogue that were at least 100 characters, we ended up with 5 such samples.
:::

</center>
```{r}
#| echo: false
helena_sample
```

<center>

::: text

I likewise took a sample from episode 9, when Helly/Helena was talking to Dylan (labeled "unknown" below). I then recorded the audio and estimated the fundamental frequency through a short-term cepstral transform. The figure below shows the distribution of average fundamental frequency by who was speaking. Note that our "unknown" falls much closer to Helena compared to Helly.
:::

</center>

```{r}
#| eval: false
#| echo: false
library(av)
library(glue)
convert <- function(n) {
  av_audio_convert(glue("analysis-helly-voice/data/r{n}.m4a"), glue("analysis-helly-voice/data/o{n}_helly.wav"))
}
purrr::walk(1:9, convert)

convert <- function(n) {
  av_audio_convert(glue("analysis-helly-voice/data/h{n}.m4a"), glue("analysis-helly-voice/data/o{n}_helena.wav"))
}
purrr::walk(1:5, convert)

av_audio_convert(glue("analysis-helly-voice/data/q1.m4a"), glue("analysis-helly-voice/data/q1.wav"))
```

```{r}
#| code-fold: true
#| message: false
#| warning: false
library(tuneR)
library(seewave)
library(glue)

get_avg_pitch <- function(n, who = "helly") {
  audio <- readWave(glue("data/o{n}_{who}.wav"))
  pitch_values <- fund(audio, f = audio@samp.rate, from = 0, 
                       to = duration(audio), plot = FALSE)
  tibble(mean = mean(pitch_values[,2], na.rm = TRUE),
         sd = sd(pitch_values[,2], na.rm = TRUE),
         median = median(pitch_values[,2], na.rm = TRUE),
         skewness = moments::skewness(pitch_values[,2], na.rm = TRUE),
         kurtosis = moments::kurtosis(pitch_values[,2], na.rm = TRUE),
         class = who)
}
helly_pitch <- purrr::map_df(1:9, get_avg_pitch, who = "helly") 
helena_pitch <- purrr::map_df(1:5, get_avg_pitch, who = "helena")

audio <- readWave(glue("data/q1.wav"))
pitch_values <- fund(audio, f = audio@samp.rate, from = 0, 
                     to = duration(audio), plot = FALSE)
unknown <- tibble(mean = mean(pitch_values[,2], na.rm = TRUE),
                  sd = sd(pitch_values[,2], na.rm = TRUE),
                  median = median(pitch_values[,2], na.rm = TRUE),
                  skewness = moments::skewness(pitch_values[,2], na.rm = TRUE),
                  kurtosis = moments::kurtosis(pitch_values[,2], na.rm = TRUE),
                  class = "unknown")
data <- bind_rows(helly_pitch, helena_pitch, unknown)
```

```{r}
#| code-fold: true
#| fig-align: center
#| fig-width: 10
ggplot(data, aes(x = mean, y = class, fill = class, color = class)) +
  geom_boxplot(alpha = 0.75) +
  labs(x = "Average pitch (fundamental frequency in kHz)", y = "") + 
    annotate("text", x = 9, y = 3.1, 
           label = "unknown falls in\nthe Helena distribution", color = "yellow", size = 6,
           hjust = -0.4) +
  annotate("segment", x = 11, xend = 11.5, 
           y = 3.1, yend = 3, 
           arrow = arrow(length = unit(0.2, "inches")), color = "yellow") +
  scale_fill_manual(values = c("#C15C58", "#5BA9D0", "yellow")) + 
  scale_color_manual(values = c("#C15C58", "#5BA9D0", "yellow")) +
  theme_mdr() + 
  theme(legend.position = "none",
        axis.text = element_text(size = 20),
        axis.title = element_text(size = 20))

```

<center>

::: text
I extracted pitch feactures including the mean, standard deviation, median, skewness, and kurtosis of the fundamental frequencies. I fit a k-Nearest Neighbors (k-NN) model using these features. The model was trained on the known audio samples from Helly and Helena. I then classified the unknown sample based on its proximity to the two groups. And look at that, it predicted that the unknown audio was from *Helena* not Helly.

:::

</center>
```{r}
train_data <- data |>
  filter(class != "unknown")

train_class <- train_data$class

train_data <- train_data |>
  select(-class)

unknown_data <- data |> 
  filter(class == "unknown") |>
  select(-class)

class::knn(train = train_data, 
           test = unknown_data, 
           cl = train_class, k = 3)

```

